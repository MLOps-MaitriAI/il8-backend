name: Merge Staging to Production (FastAPI Backend, Excluding .github)

on:
  push:
    branches:
      - staging

jobs:
  test_and_build_backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'  # Updated to match the version in your environment
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Run tests
        run: |
          # Add your test command here, for example:
          # python -m pytest tests/
          echo "Running tests... (Add your test command)"
      
      - name: Lint with flake8
        run: |
          pip install flake8
          # Stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # Exit-zero treats all errors as warnings
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      
      - name: Fix linting errors
        run: |
          # Install autopep8 for auto-fixing some issues
          pip install autopep8
          
          # Auto-fix what can be fixed
          autopep8 --in-place --aggressive --aggressive auth/user_rights_middleware.py
          
          # Manually fix remaining issues in user_rights_middleware.py
          sed -i 's/mod\.get_modules_id/get_modules_id/g' auth/user_rights_middleware.py
          sed -i 's/from fastapi import/from fastapi import Rights, /g' auth/user_rights_middleware.py
          
          # Run flake8 again to check if errors are resolved
          flake8 auth/user_rights_middleware.py --count --select=E9,F63,F7,F82 --show-source --statistics

  create_pull_request:
    needs: test_and_build_backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      - name: Create temporary branch without .github folder
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git checkout -b temp-staging-branch staging
          git rm -r --cached .github
          git add .
          git commit -m "Remove .github folder and fix linting issues"
      
      - name: Create Pull Request
        env:
          GITHUB_TOKEN: ${{ secrets.IL8_CI_CD }}
        run: |
          pr_url=$(gh pr create --base production --head temp-staging-branch --title "Merge Staging to Production (FastAPI Backend, Excluding .github)" --body "This PR merges the latest changes from the staging branch into the production branch for the FastAPI backend, excluding the .github folder and fixing linting issues. Please review and approve to proceed with the merge.")
          echo "PR_URL=$pr_url" >> $GITHUB_ENV
      
      - name: Output PR URL
        run: echo "Pull request created - ${{ env.PR_URL }}"

  # ... (rest of the workflow remains the same)
