name: Merge Staging to Production (FastAPI Backend, Excluding .github)

on:
  push:
    branches:
      - staging

jobs:
  test_and_build_backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          # Replace with actual test command for FastAPI backend, for example:
          # python -m pytest tests/
          echo "Running tests... (Add your test command here)"

  create_pull_request:
    needs: test_and_build_backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Create temporary branch without .github folder
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git checkout -b temp-staging-branch staging
          git rm -r --cached .github
          git add .
          git commit -m "Remove .github folder for merging"

      - name: Create Pull Request
        env:
          GH_TOKEN: ${{ secrets.IL8_CI_CD }}
        run: |
          pr_url=$(gh pr create --base production --head temp-staging-branch --title "Merge Staging to Production (FastAPI Backend, Excluding .github)" --body "This PR merges the latest changes from the staging branch into the production branch for the FastAPI backend, excluding the .github folder. Please review and approve to proceed with the merge.")
          echo "PR_URL=$pr_url" >> $GITHUB_ENV

      - name: Output PR URL
        run: echo "Pull request created - ${{ env.PR_URL }}"

  merge_pull_request:
    needs: create_pull_request
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Wait for PR Approval
        id: approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ secrets.IL8_CI_CD }}
          approvers: MLOps-MaitriAI

      - name: Merge Pull Request
        if: steps.approval.outputs.approved == 'true'
        env:
          GH_TOKEN: ${{ secrets.IL8_CI_CD }}
        run: |
          pr_number=$(echo ${{ env.PR_URL }} | awk -F'/' '{print $NF}')
          gh pr merge $pr_number --merge

      - name: Cleanup temporary branch
        if: steps.approval.outputs.approved == 'true'
        run: |
          git push origin --delete temp-staging-branch
